scheme PAGE =
    class
        type 
            Word = Char-list,
            Line = Word-list,
            Page = Line-list,
            Dict = Word-set

        value
            is_on : (Word >< Page) -> Bool
            is_on(word, page) is
                if page = <. .> then false
                else is_on_line(word, hd page) \/ is_on(word,tl page)
                end,

            is_on_line: (Word >< Line) -> Bool
            is_on_line(word, line) is
                if line = <. .> then false
                else (hd line) = word \/ is_on_line(word, tl line)
                end,

            number_of: (Word >< Page) -> Nat
            number_of(word, page) is
                if page = <. .> then 0
                else number_of_words_in_lines(word, ) + number_of(word, tl page)
                end,

            number_of_words_in_lines: (Word >< Line) -> Nat
            number_of_words_in_lines(word, line) is
                card{idx | idx: Nat :- idx isin inds line /\ line(idx) = word},

            /* A list of correctly spelled words */

            spell_check: (Page >< Dict) -> Word-set
            spell_check(page, dict) is
                {w | w: Word :- is_on(w, page) /\ w ~isin dict }
 
end

            

            




