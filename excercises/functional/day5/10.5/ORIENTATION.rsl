/*
5. Define a module ‘ORIENTATION’ which provides
(a) a type ‘Orientation’ which has four values, one for each orientation
 (north, south, east and west)
(b) functions ‘turnleft’, ‘turnright’ and ‘opposite’ which take an orientation and
 give a new orientation.

*/

scheme ORIENTATION =
    class
        type 
            Orientation = north | south | east | west
        
        value 
            turnleft: Orientation -> Orientation,
            turnright: Orientation -> Orientation,
            opposite: Orientation -> Orientation
        
        axiom
            [turnleft_north] turnleft(north) is  west,
            [turnleft_south] turnleft(south) is  east,
            [turnleft_east] turnleft(east)  is north,
            [turnleft_west] turnleft(west) is south,

            [turnright_turnleft] all d : Orientation :-
                turnright(turnleft(d)) is d,

            [oppsite_ax] all d : Orientation :- opposite(d) is turnleft(turnleft(d)),
    
    end
            
            
